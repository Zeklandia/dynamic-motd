#!/bin/bash

reset

# Load information and settings

echo "Loading..."

WHITE="\033[0;37m"
WHITE_BOLD="\033[1;37m"
BLUE="\033[0;34m"
BLUE_BOLD="\033[1;34m"
CYAN="\033[0;36m"
CYAN_BOLD="\033[1;36m"
RED="\033[0;31m"
RED_BOLD="\033[1;31m"
GREEN="\033[0;32m"
GREEN_BOLD="\033[1;32m"
YELLOW="\033[0;33m"
YELLOW_BOLD="\033[1;33m"
DEFAULT_FORMAT="\033[0;0m"

CONFIGFILE=~/.config/dynmotd.conf
if [ ! -d ~/.config ];
then
    mkdir ~/.config
fi
if [ ! -f $CONFIGFILE ];
then
    echo -e "# Set options for main script\n# Color for Output\nTITLE_COLOR=\"$WHITE_BOLD\"\nHEADER_COLOR=\"$RED_BOLD\"\nBORDER_COLOR=\"$CYAN\"\nOUTPUT_COLOR=\"$GREEN_BOLD\"\n# Print full output of w or only the first line (1=full output, 0=first line only)\nFULLW=0\n# Print weather information (1=yes, 0=no)\nWEATHER=1\n# ZIP Code (For weather)\nZIP=11234\n# Print banner (1=yes, 0=no)\nPRINTBAN=1\n# Print a custom banner (1=yes, 0=no)\nCUSTBAN=0\n# Text to be displayed in custom banner (backticks and \ escapes are allowed, use \\n to end a line)\nCUSTBANTEXT=\"\"\n# Which banner to print (BANLINUX, BANLINUXBIG, BANUBUNTU, BANANDROID, or BANMACOSX)\nBANNER=BANLINUX" >> $CONFIGFILE
fi
if [ ! -f /usr/bin/dynmotd ];
then
    ln -s "/usr/local/bin/dynmotd" "/usr/bin/"
fi
source $CONFIGFILE
TIME=`date`
HOSTNAME=`hostname`
WLANIP=`ifconfig wlan0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
LANIP=`ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
KERNELVER=`uname -r`
if [[ $FULLW == 1 ]]
then
    USERSTATS=`w`
else
    USERSTATS=`w | awk 'NR==1' | cut -c2-`
fi
MEMSIZE=`cat /proc/meminfo | grep MemTotal | awk {'print $2'}`
USER=`whoami`
LASTLOGIN=`last -n 2 -R $USER | awk 'NR==2'`
HOMEDIR=`echo ~`
PROCCOUNT=`ps -Afl | wc -l`
PROCLIMIT=`ulimit -u`
if [[ $WEATHER == 1 ]]
then
    WLOC=`weather $ZIP | grep 'Current conditions at' | awk '{print $4}'`
    WTEMP=`weather $ZIP | grep 'Temperature:' | awk '{print $2}'`
    WCOND=`weather $ZIP | grep 'Weather:' | cut -d: -f2 | cut -c2-`
    WSKY=`weather $ZIP | grep 'Sky conditions:' | cut -d: -f2 | cut -c2-`
fi

echo "Done!"
reset

#Begin Driplay

if [[ $PRINTBAN == 1 ]]
then
    if [[ $CUSTBAN == 1 ]]
    then
        echo -e $CUSTBANTEXT
    else

    if [[ $BANNER == BANLINUXBIG ]]
    then
        echo -e "$TITLE_COLOR __       __   __   __   __    __  ___   ___
|  |     |  | |  \ |  | |  |  |  | \  \ /  /
|  |     |  | |   \|  | |  |  |  |  \  \u203e  /
|  |____ |  | |  . .  | |  |  |  |   >   <
|       ||  | |  |\   | |  |__|  |  /  _  \\
|_______||__| |__| \__|  \______/  /__/ \__\\
"
    fi

    if [[ $BANNER == BANUBUNTU ]]
    then
        echo -e "$TITLE_COLOR   __  ____                __
  / / / / /_  __  ______  / /___  __
 / / / / __ \/ / / / __ \/ __/ / / /
/ /_/ / /_/ / /_/ / / / / /_/ /_/ /
\____/_____/\____/_/ /_/\__/\____/
"
    fi

    if [[ $BANNER == BANLINUX ]]
    then
        echo -e "$TITLE_COLOR    __    _
   / /   /_/___  __  ___  __
  / /   / / __ \/ / / / |/ /
 / /___/ / / / / /_/ /|   |
/_____/_/_/ /_/\____//_/\_\\
"
    fi

    if [[ $BANNER == BANANDROID ]]
    then
        echo -e "$TITLE_COLOR    ___              __           __    __
   /   |  ____  ____/ /________  /_/___/ /
  / /| | / __ \/ __  / ___/ __ \/ / __  /
 / ___ |/ / / / /_/ / /  / /_/ / / /_/ /
/_/  |_/_/ /_/\____/_/   \____/_/\____/
"
    fi

    if [[ $BANNER == BANMACOSX ]]
    then
        echo -e "$TITLE_COLOR    __  ___              ____  _____    _  __
   /  |/  /__________   / __ \/ ___/   | |/ /
  / /|_/ / __  / ___/  / / / /\__ \    |   /
 / /  / / /_/ / /__   / /_/ /___/ /   /   |
/_/  /_/\____/\___/   \____//____/   /_/|_|
"
    fi
    fi
fi
echo -e "$BORDER_COLOR:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=[$HEADER_COLOR System Stats $BORDER_COLOR]=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:
$BORDER_COLOR:  $TITLE_COLOR Date/Time $BORDER_COLOR= $OUTPUT_COLOR$TIME
$BORDER_COLOR:   $TITLE_COLOR Hostname $BORDER_COLOR= $OUTPUT_COLOR$HOSTNAME
$BORDER_COLOR:    $TITLE_COLOR WLAN IP $BORDER_COLOR= $OUTPUT_COLOR$WLANIP
$BORDER_COLOR:     $TITLE_COLOR LAN IP $BORDER_COLOR= $OUTPUT_COLOR$LANIP
$BORDER_COLOR:     $TITLE_COLOR Kernel $BORDER_COLOR= $OUTPUT_COLOR$KERNELVER
$BORDER_COLOR:     $TITLE_COLOR Memory $BORDER_COLOR= $OUTPUT_COLOR$MEMSIZE kB
$BORDER_COLOR:      $TITLE_COLOR Stats $BORDER_COLOR= $OUTPUT_COLOR$USERSTATS
$BORDER_COLOR:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:[$HEADER_COLOR User Stats $BORDER_COLOR]:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:
$BORDER_COLOR:   $TITLE_COLOR Username $BORDER_COLOR= $OUTPUT_COLOR$USER
$BORDER_COLOR: $TITLE_COLOR Last Login $BORDER_COLOR= $OUTPUT_COLOR$LASTLOGIN
$BORDER_COLOR:       $TITLE_COLOR Home $BORDER_COLOR= $OUTPUT_COLOR$HOMEDIR
$BORDER_COLOR:  $TITLE_COLOR Processes $BORDER_COLOR= $OUTPUT_COLOR$PROCCOUNT of $PROCLIMIT"
if [[ $WEATHER == 1 ]]
then
    echo -e "$BORDER_COLOR:=:=:=:=:=:=:=:=:=:=:=:=:=:[$HEADER_COLOR Internet Weather Stats $BORDER_COLOR]:=:=:=:=:=:=:=:=:=:=:=:=:=:
$BORDER_COLOR:   $TITLE_COLOR Location $BORDER_COLOR= $OUTPUT_COLOR$WLOC, $ZIP
$BORDER_COLOR:       $TITLE_COLOR Temp $BORDER_COLOR= $OUTPUT_COLOR$WTEMP \u00b0F
$BORDER_COLOR:    $TITLE_COLOR Weather $BORDER_COLOR= $OUTPUT_COLOR$WCOND
$BORDER_COLOR:        $TITLE_COLOR Sky $BORDER_COLOR= $OUTPUT_COLOR$WSKY
$BORDER_COLOR:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:[]:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:
$DEFAULT_FORMAT"
else
    echo -e "$BORDER_COLOR:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:[]:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:=:
$DEFAULT_FORMAT"
fi
